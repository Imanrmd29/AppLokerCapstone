// Generated by view binder compiler. Do not edit!
package com.c22_054.apploker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.c22_054.apploker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivProfil;

  @NonNull
  public final RecyclerView listCategory;

  @NonNull
  public final RecyclerView listPerusahaan;

  @NonNull
  public final SearchView searchBar;

  @NonNull
  public final SwipeRefreshLayout swipeCategory;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final TextView textView13;

  private FragmentHomeBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivProfil,
      @NonNull RecyclerView listCategory, @NonNull RecyclerView listPerusahaan,
      @NonNull SearchView searchBar, @NonNull SwipeRefreshLayout swipeCategory,
      @NonNull SwipeRefreshLayout swipeRefresh, @NonNull TextView textView13) {
    this.rootView = rootView;
    this.ivProfil = ivProfil;
    this.listCategory = listCategory;
    this.listPerusahaan = listPerusahaan;
    this.searchBar = searchBar;
    this.swipeCategory = swipeCategory;
    this.swipeRefresh = swipeRefresh;
    this.textView13 = textView13;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_profil;
      ImageView ivProfil = ViewBindings.findChildViewById(rootView, id);
      if (ivProfil == null) {
        break missingId;
      }

      id = R.id.list_category;
      RecyclerView listCategory = ViewBindings.findChildViewById(rootView, id);
      if (listCategory == null) {
        break missingId;
      }

      id = R.id.list_perusahaan;
      RecyclerView listPerusahaan = ViewBindings.findChildViewById(rootView, id);
      if (listPerusahaan == null) {
        break missingId;
      }

      id = R.id.search_bar;
      SearchView searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.swipe_category;
      SwipeRefreshLayout swipeCategory = ViewBindings.findChildViewById(rootView, id);
      if (swipeCategory == null) {
        break missingId;
      }

      id = R.id.swipe_refresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = ViewBindings.findChildViewById(rootView, id);
      if (textView13 == null) {
        break missingId;
      }

      return new FragmentHomeBinding((LinearLayout) rootView, ivProfil, listCategory,
          listPerusahaan, searchBar, swipeCategory, swipeRefresh, textView13);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
